
How-to-Compile for OSELAS-Toolchain
===================================

(Last updates 23. June 2016, cschlote)

- Install "Ubuntu 16.04 xenial xerus" - any flavour possible
- Install the following packages:

$ sudo apt install aptitude mc gedit geany joe meld libmodule-build-perl ccache git \
    autoconf autotools-dev libncurses-dev flex bison texinfo python-dev g++ fakeroot debhelper lzop \
     default-jdk default-jre 

- Checkout sources for toolchain, and update the git submodule for the embedded ptxdist:

$ git clone git://git.vahanus.net/gitroot/csc/oselas.toolchain.git
$ git checkout v2016.06.1.0 (or newer)
$ git submodule init

- Compile the reference ptxdist in the git submodule:

$ ./build_all_v2.mk compile-ptxd

$ ./build_all_v2.mk help

- Build all toolchains in a row:

$ ./build_all_v2.mk clean \
gstate/aarch64-v8a-linux-gnu-gcc-5.4.0-glibc-2.23-binutils-2.26-kernel-4.6-sanitized.build \
gstate/arm-1136jfs-linux-gnueabi-gcc-5.4.0-glibc-2.23-binutils-2.26-kernel-4.6-sanitized.build \
gstate/arm-1136jfs-linux-gnueabihf-gcc-5.4.0-glibc-2.23-binutils-2.26-kernel-4.6-sanitized.build \
gstate/arm-cortexa8-linux-gnueabi-gcc-5.4.0-glibc-2.23-binutils-2.26-kernel-4.6-sanitized.build \
gstate/arm-cortexa8-linux-gnueabihf-gcc-5.4.0-glibc-2.23-binutils-2.26-kernel-4.6-sanitized.build \
gstate/arm-cortexm3-eabi-gcc-5.4.0-newlib-2.4.0-binutils-2.26.build \
gstate/arm-cortexm3-uclinuxeabi-gcc-5.4.0-uclibc-ng-1.0.14-binutils-2.26-kernel-4.6-sanitized.build \
gstate/arm-cortexm4-eabihf-gcc-5.4.0-newlib-2.4.0-binutils-2.26.build \
gstate/arm-cortexm4-uclinuxeabihf-gcc-5.4.0-uclibc-ng-1.0.14-binutils-2.26-kernel-4.6-sanitized.build \
gstate/arm-v4t-linux-gnueabi-gcc-5.4.0-glibc-2.23-binutils-2.26-kernel-4.6-sanitized.build \
gstate/arm-v5te-linux-gnueabi-gcc-5.4.0-glibc-2.23-binutils-2.26-kernel-4.6-sanitized.build \
gstate/arm-v7a-linux-gnueabi-gcc-5.4.0-glibc-2.23-binutils-2.26-kernel-4.6-sanitized.build \
gstate/arm-v7a-linux-gnueabihf-gcc-5.4.0-glibc-2.23-binutils-2.26-kernel-4.6-sanitized.build \
gstate/i586-unknown-linux-gnu-gcc-5.4.0-glibc-2.23-binutils-2.26-kernel-4.6-sanitized.build \
gstate/i686-atom-linux-gnu-gcc-5.4.0-glibc-2.23-binutils-2.26-kernel-4.6-sanitized.build \
gstate/mipsel-softfloat-linux-gnu-gcc-5.4.0-glibc-2.23-binutils-2.26-kernel-4.6-sanitized.build \
gstate/powerpc-603e-linux-gnu-gcc-5.4.0-glibc-2.23-binutils-2.26-kernel-4.6-sanitized.build \
gstate/x86-64-unknown-linux-gnu-gcc-5.4.0-glibc-2.23-binutils-2.26-kernel-4.6-sanitized.build

- Or just a subset:

$ ./build_all_v2.mk \
 gstate/arm-1136jfs-linux-gnueabihf-gcc-5.4.0-glibc-2.23-binutils-2.26-kernel-4.6-sanitized.build \
 gstate/arm-v7a-linux-gnueabi-gcc-5.4.0-glibc-2.23-binutils-2.26-kernel-4.6-sanitized.build \
 gstate/i686-atom-linux-gnu-gcc-5.4.0-glibc-2.23-binutils-2.26-kernel-4.6-sanitized.build \
 gstate/x86-64-unknown-linux-gnu-gcc-5.4.0-glibc-2.23-binutils-2.26-kernel-4.6-sanitized.build \
 gstate/powerpc-603e-linux-gnu-gcc-5.4.0-glibc-2.23-binutils-2.26-kernel-4.6-sanitized.build

- Install the toolchains:

$ dpkg -i dist/*.deb

(Copy the debian packages to a safe place, if you intend to re-use them for further installations)

- To remove all generated files:

$ ./build_all_v2.mk distclean

